// <auto-generated />
using System;
using Library.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20240520101847_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookCategory", b =>
                {
                    b.Property<Guid>("BooksId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BooksId", "CategoriesId");

                    b.HasIndex("CategoriesId");

                    b.ToTable("BookCategory");

                    b.HasData(
                        new
                        {
                            BooksId = new Guid("42a0d63a-5e6d-43d6-803d-134638384e92"),
                            CategoriesId = new Guid("a05881d5-cc79-40d1-a0ba-316cfaf2768b")
                        },
                        new
                        {
                            BooksId = new Guid("42a0d63a-5e6d-43d6-803d-134638384e92"),
                            CategoriesId = new Guid("efcc8aa6-ef70-431f-a0ff-4769f8b6cd3f")
                        },
                        new
                        {
                            BooksId = new Guid("21d6ba4d-0564-43b2-9293-83dd5d4717ba"),
                            CategoriesId = new Guid("604c6170-234b-4eae-a3bc-07103caa06a1")
                        },
                        new
                        {
                            BooksId = new Guid("21d6ba4d-0564-43b2-9293-83dd5d4717ba"),
                            CategoriesId = new Guid("3f462fbf-7051-48e5-9344-4d63e8f93177")
                        },
                        new
                        {
                            BooksId = new Guid("3faed062-a4b4-45d1-99f1-65efcc386be3"),
                            CategoriesId = new Guid("efcc8aa6-ef70-431f-a0ff-4769f8b6cd3f")
                        },
                        new
                        {
                            BooksId = new Guid("0b671bcc-40eb-441f-a828-e2a6227eccf9"),
                            CategoriesId = new Guid("efcc8aa6-ef70-431f-a0ff-4769f8b6cd3f")
                        },
                        new
                        {
                            BooksId = new Guid("d416e549-54ea-40ce-bc3f-a181339530b8"),
                            CategoriesId = new Guid("57ce5297-bdd7-4f7a-97b5-daf63201109a")
                        },
                        new
                        {
                            BooksId = new Guid("2366f76a-0349-4fcf-a709-549f2a4800a7"),
                            CategoriesId = new Guid("0f0148d3-67e3-4f84-b1be-3beb0c6dc13d")
                        },
                        new
                        {
                            BooksId = new Guid("2366f76a-0349-4fcf-a709-549f2a4800a7"),
                            CategoriesId = new Guid("7d7f5b15-3643-448e-aff6-81735ec207a8")
                        },
                        new
                        {
                            BooksId = new Guid("91c778a0-100d-4ecb-a047-e9ef7f6e39c2"),
                            CategoriesId = new Guid("7d7f5b15-3643-448e-aff6-81735ec207a8")
                        },
                        new
                        {
                            BooksId = new Guid("53542bb7-8eea-4061-9fb7-33c3df5ce77c"),
                            CategoriesId = new Guid("a05881d5-cc79-40d1-a0ba-316cfaf2768b")
                        },
                        new
                        {
                            BooksId = new Guid("98c15ce1-a358-46ca-a071-eb4b7eac1ba9"),
                            CategoriesId = new Guid("3f462fbf-7051-48e5-9344-4d63e8f93177")
                        },
                        new
                        {
                            BooksId = new Guid("190acb3b-a3da-4850-bb81-3e3b9b549250"),
                            CategoriesId = new Guid("3e8bcc48-e6f5-4cbc-9daf-d87c6092e8d5")
                        },
                        new
                        {
                            BooksId = new Guid("8d50cd9f-6c6e-4a9f-80b3-7af9b859e1a4"),
                            CategoriesId = new Guid("57ce5297-bdd7-4f7a-97b5-daf63201109a")
                        },
                        new
                        {
                            BooksId = new Guid("a4c15cbe-b1e0-4eba-b70b-ad832f7d292d"),
                            CategoriesId = new Guid("57ce5297-bdd7-4f7a-97b5-daf63201109a")
                        },
                        new
                        {
                            BooksId = new Guid("19ff0e8d-55df-499b-a87c-7e9764d50c72"),
                            CategoriesId = new Guid("604c6170-234b-4eae-a3bc-07103caa06a1")
                        });
                });

            modelBuilder.Entity("Library.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("42a0d63a-5e6d-43d6-803d-134638384e92"),
                            Author = "Harper Lee",
                            Count = 10,
                            Title = "To Kill a Mockingbird",
                            Year = 1960
                        },
                        new
                        {
                            Id = new Guid("21d6ba4d-0564-43b2-9293-83dd5d4717ba"),
                            Author = "George Orwell",
                            Count = 15,
                            Title = "1984",
                            Year = 1949
                        },
                        new
                        {
                            Id = new Guid("3faed062-a4b4-45d1-99f1-65efcc386be3"),
                            Author = "F. Scott Fitzgerald",
                            Count = 8,
                            Title = "The Great Gatsby",
                            Year = 1925
                        },
                        new
                        {
                            Id = new Guid("0b671bcc-40eb-441f-a828-e2a6227eccf9"),
                            Author = "Jane Austen",
                            Count = 12,
                            Title = "Pride and Prejudice",
                            Year = 1813
                        },
                        new
                        {
                            Id = new Guid("d416e549-54ea-40ce-bc3f-a181339530b8"),
                            Author = "J.D. Salinger",
                            Count = 9,
                            Title = "The Catcher in the Rye",
                            Year = 1951
                        },
                        new
                        {
                            Id = new Guid("2366f76a-0349-4fcf-a709-549f2a4800a7"),
                            Author = "J.R.R. Tolkien",
                            Count = 14,
                            Title = "The Hobbit",
                            Year = 1937
                        },
                        new
                        {
                            Id = new Guid("91c778a0-100d-4ecb-a047-e9ef7f6e39c2"),
                            Author = "Herman Melville",
                            Count = 5,
                            Title = "Moby-Dick",
                            Year = 1851
                        },
                        new
                        {
                            Id = new Guid("53542bb7-8eea-4061-9fb7-33c3df5ce77c"),
                            Author = "Leo Tolstoy",
                            Count = 7,
                            Title = "War and Peace",
                            Year = 1869
                        },
                        new
                        {
                            Id = new Guid("98c15ce1-a358-46ca-a071-eb4b7eac1ba9"),
                            Author = "Fyodor Dostoevsky",
                            Count = 6,
                            Title = "Crime and Punishment",
                            Year = 1866
                        },
                        new
                        {
                            Id = new Guid("190acb3b-a3da-4850-bb81-3e3b9b549250"),
                            Author = "Yuval Noah Harari",
                            Count = 11,
                            Title = "Sapiens: A Brief History of Humankind",
                            Year = 2011
                        },
                        new
                        {
                            Id = new Guid("8d50cd9f-6c6e-4a9f-80b3-7af9b859e1a4"),
                            Author = "James Joyce",
                            Count = 4,
                            Title = "Ulysses",
                            Year = 1922
                        },
                        new
                        {
                            Id = new Guid("a4c15cbe-b1e0-4eba-b70b-ad832f7d292d"),
                            Author = "Fyodor Dostoevsky",
                            Count = 8,
                            Title = "The Brothers Karamazov",
                            Year = 1880
                        },
                        new
                        {
                            Id = new Guid("19ff0e8d-55df-499b-a87c-7e9764d50c72"),
                            Author = "Aldous Huxley",
                            Count = 10,
                            Title = "Brave New World",
                            Year = 1932
                        });
                });

            modelBuilder.Entity("Library.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("604c6170-234b-4eae-a3bc-07103caa06a1"),
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = new Guid("0f0148d3-67e3-4f84-b1be-3beb0c6dc13d"),
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = new Guid("3e8bcc48-e6f5-4cbc-9daf-d87c6092e8d5"),
                            Name = "Non-Fiction"
                        },
                        new
                        {
                            Id = new Guid("5e60ded5-8916-463c-a394-ceb49dcc2ff0"),
                            Name = "Mystery"
                        },
                        new
                        {
                            Id = new Guid("efcc8aa6-ef70-431f-a0ff-4769f8b6cd3f"),
                            Name = "Romance"
                        },
                        new
                        {
                            Id = new Guid("3f462fbf-7051-48e5-9344-4d63e8f93177"),
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = new Guid("a05881d5-cc79-40d1-a0ba-316cfaf2768b"),
                            Name = "Historical Fiction"
                        },
                        new
                        {
                            Id = new Guid("2190cec8-57b2-432e-8cc7-1713f3921848"),
                            Name = "Biography"
                        },
                        new
                        {
                            Id = new Guid("d1dc20a5-81ec-42bf-bfb3-98fb8468257a"),
                            Name = "Self - Help"
                        },
                        new
                        {
                            Id = new Guid("57ce5297-bdd7-4f7a-97b5-daf63201109a"),
                            Name = "Young Adult"
                        },
                        new
                        {
                            Id = new Guid("25d39c10-8058-42e0-9dfc-65729221468a"),
                            Name = "Children's Books"
                        },
                        new
                        {
                            Id = new Guid("558407e5-f2ad-4adf-96f7-46cb21f0f9ad"),
                            Name = "Poetry"
                        },
                        new
                        {
                            Id = new Guid("410f7dd9-2561-49db-8674-58123ed4f966"),
                            Name = "Graphic Novels"
                        },
                        new
                        {
                            Id = new Guid("7d7f5b15-3643-448e-aff6-81735ec207a8"),
                            Name = "Adventure"
                        });
                });

            modelBuilder.Entity("Library.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Assessment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d1aaa52a-67b8-450c-a125-cebe89cc940f"),
                            Assessment = "5",
                            BookId = new Guid("42a0d63a-5e6d-43d6-803d-134638384e92"),
                            Comment = "Best book I have ever read!",
                            UserId = new Guid("37434f41-8df2-4e41-b575-a07e3ca25fac")
                        },
                        new
                        {
                            Id = new Guid("cfde827e-df3b-4068-b83b-4cd5b825b9ca"),
                            Assessment = "5",
                            BookId = new Guid("42a0d63a-5e6d-43d6-803d-134638384e92"),
                            Comment = "A masterpiece!",
                            UserId = new Guid("413ddc6a-212d-45ab-ae2a-100e8074a24a")
                        },
                        new
                        {
                            Id = new Guid("0e43412d-62c3-44ba-a69f-a6cdd73459f9"),
                            Assessment = "4",
                            BookId = new Guid("21d6ba4d-0564-43b2-9293-83dd5d4717ba"),
                            Comment = "A timeless classic!",
                            UserId = new Guid("37434f41-8df2-4e41-b575-a07e3ca25fac")
                        },
                        new
                        {
                            Id = new Guid("842b2707-a827-4e79-bd11-596f5109ffda"),
                            Assessment = "4",
                            BookId = new Guid("3faed062-a4b4-45d1-99f1-65efcc386be3"),
                            Comment = "Highly recommend!",
                            UserId = new Guid("37434f41-8df2-4e41-b575-a07e3ca25fac")
                        },
                        new
                        {
                            Id = new Guid("a85d779a-843a-4d6d-a19a-b683e09868f7"),
                            Assessment = "4",
                            BookId = new Guid("3faed062-a4b4-45d1-99f1-65efcc386be3"),
                            Comment = "A must-read!",
                            UserId = new Guid("413ddc6a-212d-45ab-ae2a-100e8074a24a")
                        },
                        new
                        {
                            Id = new Guid("67d85093-28c8-4306-84b2-9b001f1702d2"),
                            Assessment = "5",
                            BookId = new Guid("0b671bcc-40eb-441f-a828-e2a6227eccf9"),
                            Comment = "Amazing!",
                            UserId = new Guid("37434f41-8df2-4e41-b575-a07e3ca25fac")
                        },
                        new
                        {
                            Id = new Guid("7e8e49dc-0667-40e3-a55f-93a26db9be8a"),
                            Assessment = "5",
                            BookId = new Guid("0b671bcc-40eb-441f-a828-e2a6227eccf9"),
                            Comment = "Really liked it!",
                            UserId = new Guid("413ddc6a-212d-45ab-ae2a-100e8074a24a")
                        },
                        new
                        {
                            Id = new Guid("0091eba6-59d9-4c9e-aa26-11c524295c60"),
                            Assessment = "5",
                            BookId = new Guid("d416e549-54ea-40ce-bc3f-a181339530b8"),
                            Comment = "So good!",
                            UserId = new Guid("413ddc6a-212d-45ab-ae2a-100e8074a24a")
                        });
                });

            modelBuilder.Entity("Library.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33587ca1-f612-4eed-bf29-612b392ca62e"),
                            PasswordHash = "RvZfVzyCCb/taoPRSTaqL6JTQziAoc1FiiOg0Hv0q3v0JgfOtJm8r10ZgnUIhG7bqcMq33rc9bHnAXw5c5p71A==",
                            PasswordSalt = "QSh9Y8uf1obiYNphf5Dq1Pb5zWCs/jiK1T0V7kyIhMEOSmLLiUUQlyqI2B1casXFn1dx/Y+SnPLUCk5LiEHW4Q==",
                            Username = "admin"
                        },
                        new
                        {
                            Id = new Guid("37434f41-8df2-4e41-b575-a07e3ca25fac"),
                            PasswordHash = "EWPTwsqy+EAolDweAzSOWuz5vaLo7pZeSO+xow/14nojfETf04S3wO1fqxsrxwb3rEiyq56/dd011D2U3Y5MYw==",
                            PasswordSalt = "SDhOjqpx2zNLOlTjzOf9ZOrWCe83JIO8SrxkAlI8RwjnIy+AfNas+ezCZV2Dpm+dbhOp/MPebWcvlyrVOHZGTw==",
                            Username = "user1"
                        },
                        new
                        {
                            Id = new Guid("413ddc6a-212d-45ab-ae2a-100e8074a24a"),
                            PasswordHash = "gJhzAsejHP1OIgNdnAX3sueJMWhFPU5OktnT+DtsR9c2uDBstOUMztLhnhqWuO5bjIHMfUXp65m5rB/DQs7hMg==",
                            PasswordSalt = "NTMBNQtgTrb/rOZtaNriTdsldmuI9VccKI0UjiGI5MHnuPo0vy3Lsg/uf6FaZ6+ipjmJfbdPus06NfakZO7GHw==",
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("BookCategory", b =>
                {
                    b.HasOne("Library.Entities.Book", null)
                        .WithMany()
                        .HasForeignKey("BooksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Library.Entities.Review", b =>
                {
                    b.HasOne("Library.Entities.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.Entities.Book", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
